#!/usr/bin/env python3

# Shamelessly stolen from Michael Perlin:
# https://github.com/perlinm/scripts-configs-etc

import sys, os, shutil, subprocess, shutil

trash_dir = os.path.expanduser("~/.trash")
old_ext = '.old'

def backup(item):
  if not os.path.exists(item + old_ext):
    shutil.move(item, item + old_ext)
  else:
    backup(item + old_ext)

for item in sys.argv[1:]:

  # define some paths
  item = os.path.abspath(item)
  trashed_item = trash_dir + item

  # make all parent directories for trashed item
  parent_dirs = item.split("/")
  for d in range(1,len(parent_dirs)):
    parent_dir = trash_dir+"/".join(parent_dirs[:d])

    if not os.path.isdir(parent_dir):
      while os.path.exists(parent_dir):
        backup(parent_dir)
      os.makedirs(parent_dir)

  try:
    # backup any conflicting objects in the track
    while os.path.exists(trashed_item):
      backup(trashed_item)
    # move item to the trash
    shutil.move(item,trashed_item)

  # if we get any errors, print them
  except PermissionError:
    print("permission error")
  except Exception as ex:
    print(ex)
